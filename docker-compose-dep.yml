services:
  postgres:
    container_name: postgres_container
    image: postgres:13.5
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: turbo_deploy
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  golang:
    container_name: golang_container
    build:
      dockerfile: Dockerfile.local
    environment:
      - STAGE=${STAGE}
      - DB_URL=${DB_URL}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_USER=${REDIS_USER}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SENTRY_DSN=${SENTRY_DSN}
      - DD_AGENT_HOST=${DD_AGENT_HOST}
      - S3_BUCKET=${S3_BUCKET}
    ports:
      - 8080:8080
    restart: on-failure
    depends_on:
      - postgres
    volumes:
      - ./:/app

volumes:
  db:
    driver: local
